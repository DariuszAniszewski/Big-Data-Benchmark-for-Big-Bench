<?xml version="1.0" encoding="UTF-8"?>

<!--
/*******************************************************************************
 * Copyright (c) 2013, bankmark and/or its affiliates. All rights reserved. 
 * bankmark UG PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 ******************************************************************************/
-->
<generation>

 
 
	<!-- DEFAULT Scheduler for all Tables, if no table specific scheduler is specified-->
	<scheduler name="DefaultScheduler">
	<partitioner name="pdgf.core.dataGenerator.scheduler.TemplatePartitioner">
	<prePartition><!--  
	if(${REFRESH_SYSTEM_ENABLED}>0){
		int tableID = table.getTableID();
		int updateID = 0;
		long rowStart;
		long rowStop;
		if(${REFRESH_PHASE}>0){
			//Refresh part
			rowStart = table.getSize()*${REFRESH_PERCENTAGE}+1;
			rowStop = table.getSize()-1;
		}else{
			//"normal" part
			rowStart = 0;
			rowStop = table.getSize()*${REFRESH_PERCENTAGE};
		}
		return new pdgf.core.dataGenerator.scheduler.Partition(tableID, updateID,rowStart,rowStop);
	}else{
		//DEFAULT
		return getDefaultPartitioner().getPrePartition(project, table);				
	}

			
	-->
	</prePartition>
	</partitioner>
	</scheduler>
	<!-- DEFAULT output for all Tables, if no table specific output is specified-->
	<output name="CSVRowOutput">
		<fileTemplate>outputDir + table.getName() +(nodeCount!=1?"_"+Integer.toString(nodeNumber):"")+ fileEnding</fileTemplate>
		<outputDir>output/</outputDir>
		<fileEnding>.dat</fileEnding>
		<delimiter>|</delimiter>
		<charset>UTF-8</charset>
		<sortByRowID>true</sortByRowID>
	</output>

	<schema name="default">
		<tables>	
			<!-- Static tables (fixed small size, generated only on one node, skipped on others) -->
			<table name="date_dim" static="true">
				<scheduler name="DefaultScheduler" >
					<partitioner name="pdgf.core.dataGenerator.scheduler.DefaultPartitioner" staticTableOnAllNodes="false"/>
				</scheduler>
			</table>
			<table name="time_dim" static="true">
				<scheduler name="DefaultScheduler" >
					<partitioner name="pdgf.core.dataGenerator.scheduler.DefaultPartitioner" staticTableOnAllNodes="false"/>
				</scheduler>			</table>
			<table name="customer_demographics" static="true">
				<scheduler name="DefaultScheduler" >
					<partitioner name="pdgf.core.dataGenerator.scheduler.DefaultPartitioner" staticTableOnAllNodes="false"/>
				</scheduler>			</table>
			<table name="household_demographics" static="true">
				<scheduler name="DefaultScheduler" >
					<partitioner name="pdgf.core.dataGenerator.scheduler.DefaultPartitioner" staticTableOnAllNodes="false"/>
				</scheduler>			
			</table>
			<!-- /static tables -->
			
			<table name="customer">
			</table>
			<table name="customer_address">
			</table>
			
			<table name="store">
			</table>
			<table name="warehouse">
			</table>
			  
			<table name="promotion">
			</table>
			<table name="web_page">
			</table>
			  
			<table name="item">
			</table>
			<table name="item_marketprices">
			</table>
			<table name="inventory">
			</table>
					
		
			<table name ="store_sales">
				<output name ="MultiLineOutput">
					<multilineFieldId>2</multilineFieldId>
					<interleaveMultilines>false</interleaveMultilines>
					<fileTemplate>outputDir + table.getName() +(nodeCount!=1?"_"+Integer.toString(nodeNumber):"")+ fileEnding</fileTemplate>
					<outputDir>output/</outputDir>
					<fileEnding>.dat</fileEnding>
					<delimiter>|</delimiter>
					<charset>UTF-8</charset>
					<sortByRowID>true</sortByRowID>
				</output>
			</table>
			<table name ="store_returns">
				<output name ="MultiLineOutput">
					<multilineFieldId>2</multilineFieldId>
					<interleaveMultilines>false</interleaveMultilines>
					<fileTemplate>outputDir + table.getName() +(nodeCount!=1?"_"+Integer.toString(nodeNumber):"")+ fileEnding</fileTemplate>
					<outputDir>output/</outputDir>
					<fileEnding>.dat</fileEnding>
					<delimiter>|</delimiter>
					<charset>UTF-8</charset>
					<sortByRowID>true</sortByRowID>
				</output>
			</table>
			<table name ="web_sales">
				<output name ="MultiLineOutput">
					<multilineFieldId>3</multilineFieldId>
					<interleaveMultilines>false</interleaveMultilines>
					<fileTemplate>outputDir + table.getName() +(nodeCount!=1?"_"+Integer.toString(nodeNumber):"")+ fileEnding</fileTemplate>
					<outputDir>output/</outputDir>
					<fileEnding>.dat</fileEnding>
					<delimiter>|</delimiter>
					<charset>UTF-8</charset>
					<sortByRowID>true</sortByRowID>
				</output>
			</table>
			<table name ="web_returns">
				<output name ="MultiLineOutput">
					<multilineFieldId>2</multilineFieldId>
					<interleaveMultilines>false</interleaveMultilines>
					<fileTemplate>outputDir + table.getName() +(nodeCount!=1?"_"+Integer.toString(nodeNumber):"")+ fileEnding</fileTemplate>
					<outputDir>output/</outputDir>
					<fileEnding>.dat</fileEnding>
					<delimiter>|</delimiter>
					<charset>UTF-8</charset>
					<sortByRowID>true</sortByRowID>
				</output>
			</table>
			<table name ="web_clickstreams">
				<output name ="MultiLineOutput">
					<multilineFieldId>3</multilineFieldId>
					<interleaveMultilines>true</interleaveMultilines>
					<fileTemplate>outputDir + table.getName() +(nodeCount!=1?"_"+Integer.toString(nodeNumber):"")+ fileEnding</fileTemplate>
					<outputDir>output/</outputDir>
					<fileEnding>.dat</fileEnding>
					<delimiter>|</delimiter>
					<charset>UTF-8</charset>
					<sortByRowID>true</sortByRowID>
				</output>
			</table>	
			
			
			<table name="product_reviews">
			</table>
			
			<!-- not used in benchmark  -->
			<table name="income_band">
			</table>
			<table name="reason">
			</table>
			<table name="ship_mode">
			</table>
			<table name="web_site">
			</table>
		</tables>
	</schema>
</generation>
