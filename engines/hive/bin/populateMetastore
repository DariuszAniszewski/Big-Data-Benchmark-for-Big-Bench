#!/usr/bin/env bash

#"INTEL CONFIDENTIAL"
#Copyright 2015  Intel Corporation All Rights Reserved. 
#
#The source code contained or described herein and all documents related to the source code ("Material") are owned by Intel Corporation or its suppliers or licensors. Title to the Material remains with Intel Corporation or its suppliers and licensors. The Material contains trade secrets and proprietary and confidential information of Intel or its suppliers and licensors. The Material is protected by worldwide copyright and trade secret laws and treaty provisions. No part of the Material may be used, copied, reproduced, modified, published, uploaded, posted, transmitted, distributed, or disclosed in any way without Intel's prior express written permission.
#
#No license under any patent, copyright, trade secret or other intellectual property right is granted to or conferred upon you by disclosure or delivery of the Materials, either expressly, by implication, inducement, estoppel or otherwise. Any license under such intellectual property rights must be express and approved by Intel in writing.

populateMetastore () {
  # make sure that this method stops when an error occured
  BIG_BENCH_STOP_AFTER_FAILURE="1"

  #runCmdWithErrorCheck "$BIG_BENCH_BIN_DIR/bigBench" cleanMetastore $LIST_OF_USER_OPTIONS 
  "$BIG_BENCH_BIN_DIR/bigBench" cleanMetastore $LIST_OF_USER_OPTIONS 
  runCmdWithErrorCheck runEngineCmd -f "$BIG_BENCH_POPULATE_METASTORE_FILE"

  runCmdWithErrorCheck hadoop fs -mkdir -p "$BIG_BENCH_HDFS_ABSOLUTE_TEMP_DIR"
  runCmdWithErrorCheck hadoop fs -mkdir -p "$BIG_BENCH_HDFS_ABSOLUTE_QUERY_RESULT_DIR"
  runCmdWithErrorCheck hadoop fs -chmod ugo+rw "$BIG_BENCH_HDFS_ABSOLUTE_TEMP_DIR"
  runCmdWithErrorCheck hadoop fs -chmod ugo+rw "$BIG_BENCH_HDFS_ABSOLUTE_QUERY_RESULT_DIR"
}

helpModule () {
  echo "This module populates the metastore with the tables for the generated dataset"
  echo
  echo "Options:"
  echo -e "-d\tdatabase to use"
  echo -e "-h\tshow this help"
  echo -e "-v\tsql script for metastore population"
  echo -e "-z\tfile with user defined engine settings"
}

runModule () {
  echo "==============================================="
  echo "Adding/Updating generated files to hive metastore"
  echo "==============================================="

  TIME_MEASUREMENT_FILE="`mktemp`"
  echo "======= Load data into hive time =========" > "$TIME_MEASUREMENT_FILE"
  { time populateMetastore > >(tee -a "$BIG_BENCH_LOADING_STAGE_LOG") 2>&1 ; } 2>> "$TIME_MEASUREMENT_FILE"
  cat "$TIME_MEASUREMENT_FILE" >> "$BIG_BENCH_LOADING_STAGE_LOG"
  rm -rf "$TIME_MEASUREMENT_FILE"
  echo "==========================="

  echo "==============================================="
  echo "HIVE load finished."
  echo "==============================================="
}
